#!/bin/bash
# shellcheck disable=1091
. script/functions # debug mode, will be changed later

if [ $EUID != 0 ]; then
	msg_error "You must run this program as root!"
	exit 1
fi

case "$1" in
	"list")
		case "$2" in
			"rc") list_rc_services ;;
			"runit") list_runit_services ;;
			"") list_rc_services; list_runit_services ;;
			*) msg_error "$1: unknown parameters" ;;
		esac
	;;

	"up") runit_send_signal "u" "$2" ;;
	"down") runit_send_signal "d" "$2" ;;
	"once") runit_send_signal "o" "$2" ;;
	"exit") runit_send_signal "x" "$2" ;;
	"pause") runit_send_signal "p" "$2" ;;
	"cont") runit_send_signal "c" "$2" ;;
	"hup") runit_send_signal "h" "$2" ;;
	"alarm") runit_send_signal "a" "$2" ;;
	"interrupt") runit_send_signal "i" "$2" ;;
	"quit") runit_send_signal "q" "$2" ;;
	"1") runit_send_signal "1" "$2" ;;
	"2") runit_send_signal "2" "$2" ;;
	"term") runit_send_signal "t" "$2" ;;
	"kill") runit_send_signal "k" "$2" ;;

	"status") ck_status "$2" ;;

	"start")
		if runit_sv_available "$2" && runit_sv_enabled "$2"; then
			runit_send_signal "u" "$2"
			for i in {1..7}; do
				sleep 0.1
				if runit_sv_up "$2"; then
					if [[ -x /run/runit/service/$2/check ]]; then
						/run/runit/service/"$2"/check
						ret=$?
						if (( ret == 0 )); then check_fail=0; break; else msg_warn "$2: timeout in $((8-i))"; sleep 1; check_fail=1; fi
					else
						break
					fi
				else
					msg_warn "$2: timeout in $((8-i))"
					sleep 1
				fi
			done
			((check_fail > 0)) && msg_warn "$2: check failed!"
			ck_status "$2"
			((i == 7)) && exit 1 || exit 0
		else
			msg_error "$2: runit service is not enabled or not a runit service"
			exit 1
		fi
	;;

	"stop")
		if runit_sv_available "$2" && runit_sv_enabled "$2"; then
			runit_send_signal "d" "$2"
			for i in {1..7}; do
				sleep 0.1
				if ! runit_sv_up "$2"; then
					break
				else
					msg_warn "$2: timeout in $((8-i))"
					sleep 1
				fi
			done
			ck_status "$2"
			((i == 7)) && exit 1 || exit 0
		else
			msg_error "$2: runit service is not enabled or not a runit service"
		fi
	;;

	"reload") runit_send_signal "h" "$2"; ck_status "$2" ;;

	"restart")
		if runit_sv_available "$2" && runit_sv_enabled "$2"; then
			runit_send_signal "t" "$2"
			runit_send_signal "c" "$2"
			runit_send_signal "u" "$2"
			for i in {1..7}; do
				sleep 0.1
				if runit_sv_up "$2"; then
					if [[ -x /run/runit/service/$2/check ]]; then
						/run/runit/service/"$2"/check
						ret=$?
						if (( ret == 0 )); then check_fail=0; break; else msg_warn "$2: timeout in $((8-i))"; sleep 1; check_fail=1; fi
					else
						break
					fi
				else
					msg_warn "Timeout in $((8-i))"
					sleep 1
				fi
			done
			((check_fail > 0)) && msg_warn "$2: check failed!"
			ck_status "$2"
			((i == 7)) && exit 1 || exit 0
		fi
	;;

	"shutdown")
		if runit_sv_available "$2" && runit_sv_enabled "$2"; then
			runit_send_signal "x" "$2"
			for i in {1..7}; do
				sleep 0.1
				if ! runit_sv_up "$2"; then
					break
				else
					msg_warn "$2: timeout in $((8-i))"
					sleep 1
				fi
			done
			ck_status "$2"
			((i == 7)) && exit 1 || exit 0
		fi
	;;

	"force-stop")
		if runit_sv_available "$2" && runit_sv_enabled "$2"; then
			runit_send_signal "d" "$2"
			for i in {1..7}; do
				sleep 0.1
				if ! runit_sv_up "$2"; then
					break
				else
					msg_warn "$2: timeout in $((8-i))"
					sleep 1
				fi
			done
			ck_status "$2"
			((i == 7)) && runit_send_signal "k" "$2" || exit 0
		else
			msg_error "$2: runit service is not enabled or not a runit service"
		fi
	;;

	"force-reload")
		if runit_sv_available "$2" && runit_sv_enabled "$2"; then
			runit_send_signal "t" "$2"
			runit_send_signal "c" "$2"
			for i in {1..7}; do
				sleep 0.1
				if runit_sv_up "$2"; then
					break
				else
					msg_warn "$2: timeout in $((8-i))"
					sleep 1
				fi
			done
			ck_status "$2"
			((i == 7)) && runit_send_signal "k" "$2" || exit 0
		else
			msg_error "$2: runit service is not enabled or not a runit service"
		fi
	;;

	"force-restart")
		if runit_sv_available "$2" && runit_sv_enabled "$2"; then
			runit_send_signal "t" "$2"
			runit_send_signal "c" "$2"
			runit_send_signal "u" "$2"
			for i in {1..7}; do
				sleep 0.1
				if runit_sv_up "$2"; then
					if [[ -x /run/runit/service/$2/check ]]; then
						/run/runit/service/"$2"/check
						ret=$?
						if (( ret == 0 )); then check_fail=0; break; else msg_warn "$2: timeout in $((8-i))"; sleep 1; check_fail=1; fi
					else
						break
					fi
				else
					msg_warn "$2: timeout in $((8-i))"
					sleep 1
				fi
			done
			((check_fail > 0)) && msg_warn "$2: check failed!"
			ck_status "$2"
			((i == 7)) && runit_send_signal "k" "$2" || exit 0
		fi
	;;

	"force-shutdown")
		if runit_sv_available "$2" && runit_sv_enabled "$2"; then
			runit_send_signal "x" "$2"
			for i in {1..7}; do
				sleep 0.1
				if ! runit_sv_up "$2"; then
					break
				else
					msg_warn "$2: timeout in $((8-i))"
					sleep 1
				fi
			done
			ck_status "$2"
			((i == 7)) && runit_send_signal "k" "$2" || exit 0
		fi
	;;

	"try-restart")
		if runit_sv_available "$2" && runit_sv_enabled "$2"; then
			runit_send_signal "t" "$2"
			runit_send_signal "c" "$2"
			for i in {1..7}; do
				sleep 0.1
				if runit_sv_up "$2"; then
					break
				else
					msg_warn "Timeout in $((8-i))"
					sleep 1
				fi
			done
			ck_status "$2"
			((i == 7)) && exit 1 || exit 0
		fi
	;;

	"")
		msg_error "usage: service command ..."
		exit 1
	;;

	*)
		msg_error "$1: unrecognized command"
		exit 1
	;;
esac
